<!DOCTYPE html>
<html class="<%= theme %>">

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta http-equiv="X-UA-Compatible" content="ie=edge">
	<meta name="robots" content="noindex, nofollow">

	<title> <%= response.error %> </title>
	<style type="text/css"> <%= cssRaw %> </style>
</head>

<script type="text/javascript"> <%- prismJsRaw %> </script>
<script type="module">
	import Vue from 'https://cdn.jsdelivr.net/npm/vue@2.6.11/dist/vue.esm.browser.js'

	new Vue({
		el: '#app',
		data: {
			isLoading: true,
			isSolutionVisible: true,
			baseUrl: <%- JSON.stringify(baseUrl) %>,
			selectedTab: 'stack-tab',
			requestStack: <%- JSON.stringify(requestStack) %>,
			errorStack: <%- JSON.stringify(errorStack) %>,
			environmentStack: <%- JSON.stringify(environmentStack) %>,
			machineStack: <%- JSON.stringify(machineStack) %>,
			selectedErrorStackIndex: 0,
		},
		mounted() {
			document.getElementById('overlay').style.visibility = "hidden";
		},
		methods: {
			handleSolutionBarVisibility: function () {
				this.isSolutionVisible ^= true;
			},
			handleTabSelection: function (tabName) {
				this.selectedTab = tabName;
				setTimeout(() => Prism.highlightAll(), 1);
			},
			handleFileSelection: function (fileIndex) {
				this.selectedErrorStackIndex = fileIndex;
				setTimeout(() => Prism.highlightAll(), 1);
			}
		}
	})
</script>

<body class="scrollbar-lg">

	<div id="app" v-cloak>
		<div id="overlay" class="custom-overlay"> </div>
		<div>
			<div class="layout-col z-10">
				<div class="mt-12 card card-has-header card-no-props">
					<div class="card-header">
						<div class="grid items-center rounded-t border-b border-tint-300 text-xs text-tint-600" style="grid-template-columns: 1fr 1fr">
							<div class="grid cols-auto justify-start gap-2 px-4 py-2">
								<div class="flex items-center">
									<%= projectPath %>
								</div>
							</div>
						</div>
					</div>
					<div></div>
					<div class="card-details">
						<div class="card-details-overflow scrollbar p-12 pt-10">
							<div class="text-2xl">
								<span class="ui-exception-class">
									<span>
										<%= errorObject.error %> [<%= response.statusCode %>]
									</span>
								</span>
								<div class="ui-exception-message">
									<%= response.message %>
								</div>
							</div>
							<div>
								<a :href="baseUrl" target="_blank" class="ui-url">
									{{ baseUrl }}
								</a>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="layout-col z-1">
				<div v-if="isSolutionVisible">
					<div v-on:click="handleSolutionBarVisibility" class="solution-toggle"><a target="_blank"
							class="link-solution">Hide solutions</a></div>
					<div class="solution">
						<div class="solution-main">
							<div class="solution-background mx-0"><svg x="0px" y="0px" viewBox="0 0 299 452"
									class="hidden absolute right-0 h-full | md:block">
									<g style="opacity: 0.075;">
										<polygon points="298.1,451.9 150.9,451.9 21,226.9 298.1,227.1"
											style="fill: rgb(63, 63, 63);">
										</polygon>
										<polygon points="298.1,227.1 21,226.9 150.9,1.9 298.1,1.9"
											style="fill: rgb(151, 151, 151);">
										</polygon>
									</g>
								</svg></div>
							<div class="p-12">
								<div class="solution-content ml-0">
									<h2 class="solution-title"> <%= errorObject.info %> </h2>
									<div>
										<%= errorSolution %>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
				<div v-else>
					<div v-on:click="handleSolutionBarVisibility" class="solution-toggle solution-toggle-show">
						<a target="_blank" class="link-solution">Show solutions</a>
					</div>
				</div>
			</div>
		</div>
		<div class="layout-col mt-12">
			<div class="tabs">
				<nav class="tab-nav">
					<ul class="tab-bar">
						<li>
							<button v-on:click="handleTabSelection('stack-tab')" style="cursor: pointer;" class="tab" :class="{'tab-active': selectedTab === 'stack-tab'}">
								Stack trace
							</button>
						</li>
						<li>
							<button v-on:click="handleTabSelection('request-tab')" style="cursor: pointer;" class="tab" :class="{'tab-active': selectedTab === 'request-tab'}">
								Request
							</button>
						</li>
						<li>
							<button v-on:click="handleTabSelection('environment-tab')" style="cursor: pointer;" class="tab" :class="{'tab-active': selectedTab === 'environment-tab'}">
								Environment
							</button>
						</li>
						<li>
							<button v-on:click="handleTabSelection('machine-tab')" style="cursor: pointer;" class="tab" :class="{'tab-active': selectedTab === 'machine-tab'}">
								Machine
							</button>
						</li>
						<li>
							<button v-on:click="handleTabSelection('context-tab')" style="cursor: pointer;" class="tab" :class="{'tab-active': selectedTab === 'context-tab'}">
								Context
							</button>
						</li>
						<li>
							<button v-on:click="handleTabSelection('app-tab')" style="cursor: pointer;" class="tab" :class="{'tab-active': selectedTab === 'app-tab'}">
								App
							</button>
						</li>
					</ul>
					<!-- <div class="tab-delimiter"></div> -->
				</nav>
				<div class="tab-main">
					<div v-if="selectedTab === 'stack-tab'" class="stack">
						<div class="stack-nav">
							<div class="stack-nav-actions">
							</div>
							<div class="stack-frames">
								<ol class="stack-frames-scroll scrollbar">

									<% for(const index in errorStack) {%>
									<li>
										<ul class="stack-frame-group stack-frame-group-vendor">
											<li class="stack-frame | cursor-pointer stack-frame" :class="{ 'stack-frame-selected' : selectedErrorStackIndex == '<%= [index] %>'}">
												<div class="stack-frame-number"><%= Number(index)+1 %></div>
												<div v-on:click="handleFileSelection('<%= index %>')"
													class="stack-frame-text">
													<header class="stack-frame-header mb-1"><span
															class="inline-flex justify-start items-baseline stack-frame-path"><span
																class="ui-path text-gray-800">
																<%= errorStack[index].fileName %>
															</span>
														</span></header> <span class="stack-frame-exception-class"><span
															class="ui-exception-class stack-frame-exception-class"><span
																class="opacity-75"><%= errorStack[index].functionName %><wbr></span>
															</span></span>
												</div>
												<div class="stack-frame-line"><span class="ui-line-number">
														:<span
															class="font-mono"><%= errorStack[index].lineNumber %></span></span>
												</div>
											</li>
										</ul>
									</li>
									<% } %>

								</ol>
							</div>
						</div>
						<div class="stack-main">
							<div class="stack-main-header">
								<div class="grid cols-auto gap-2 justify-start items-center">
									<span class="ui-exception-class">
										<span class="opacity-75">{{ errorStack[selectedErrorStackIndex].functionName }}</span>
									</span>
								</div>
								<span class="inline-flex justify-start items-baseline mt-1">
									<span class="ui-path">
										<span>{{ errorStack[selectedErrorStackIndex].fileName }}:{{ errorStack[selectedErrorStackIndex].lineNumber }}</span>
									</span>
								</span>
							</div>
							<div class="stack-main-content">
								<div class="stack-viewer scrollbar">
									<div class="stack-ruler">
										<div class="stack-lines">
											<p
												v-for="(line, index) in errorStack[selectedErrorStackIndex].errorLines"
												:key="index"
												class="stack-line cursor-pointer"
												:class="{'stack-line-highlight': line == errorStack[selectedErrorStackIndex].lineNumber}"
											>
											  {{ line }}
											</p>
										</div>
									</div>
									<pre class="stack-code light"><code id="code-view" class="language-js"><p class="stack-code-line" :class="{'stack-code-line-highlight': errorStack[selectedErrorStackIndex].errorLines[index] == errorStack[selectedErrorStackIndex].lineNumber}" v-for="(stack, index) in errorStack[selectedErrorStackIndex].codeRaw" :key="index+selectedErrorStackIndex">{{ stack }}</code></pre>
								</div>
							</div>
						</div>
					</div>
					<div v-else-if="selectedTab === 'request-tab'" class="tab-content">
						<div class="layout-col">
							<div class="tab-content-section border-none">
								<h3 class="definition-list-title"> Request </h3>
								<dl class="definition-list">
									<dt class="definition-label"> URL </dt><dd class="definition-value">{{ baseUrl }}</dd>
									<dt class="definition-label"> Method </dt><dd class="definition-value">{{ requestStack.method }}</dd>
								</dl>
							</div>
							<div class="tab-content-section">
								<h3 class="definition-list-title">Headers</h3>
								<dl v-for="item, index in requestStack.headers" class="definition-list">
									<dt v-if="item" class="definition-label">{{ index }}</dt><dd class="definition-value">{{ item }}</dd><br>
								</dl>
							</div>
							<div class="tab-content-section">
								<h3 class="definition-list-title">Query String</h3>
								<div v-for="item, index in requestStack.query" class="definition-list">
									<dt v-if="item" class="definition-label">{{ index }}</dt><dd class="definition-value">{{ item }}</dd><br>
								</div>
							</div>
							<div class="tab-content-section">
								<h3 class="definition-list-title">Body</h3>
								<div v-for="item, index in requestStack.body" class="definition-list">
									<dt v-if="item" class="definition-label">{{ index }}</dt><dd class="definition-value">{{ item }}</dd><br>
								</div>
							</div>
							<div class="tab-content-section"></div>
						</div>
					</div>
					<div v-else-if="selectedTab === 'environment-tab'" class="tab-content">
						<div class="layout-col">
							<br>
							<h3 class="definition-list-title">Environment Variables</h3>
							<div v-for="item, index in environmentStack" class="definition-list">
								<dt v-if="item" class="definition-label">{{ index }}</dt><dd class="definition-value">{{ item }}</dd><br>
							</div>
						</div>
					</div>
					<div v-else-if="selectedTab === 'context-tab'" class="tab-content">
						<div class="layout-col">
							<br>
							<h3 class="definition-list-title">Environment Information</h3>
							<div class="definition-list">
								<dt class="definition-label">Node</dt>
								<dd class="definition-value">
									<pre class="stack-code light"><code id="code-view" class="language-json"><p class="stack-code-line">{{ machineStack.nodeEnvironment }}</code></pre>
								</dd>
								<dt class="definition-label">Nest Core Version</dt><dd class="definition-value">{{ environmentStack['npm_package_dependencies__nestjs_core'] }}</dd>
								<dt class="definition-label">Typescript Version</dt><dd class="definition-value">{{ environmentStack['npm_package_devDependencies_typescript'] }}</dd>
							</div>
						</div>
					</div>
					<div v-else-if="selectedTab === 'machine-tab'" class="tab-content">
						<div class="layout-col">
							<br>
							<h3 class="definition-list-title">Machine Information</h3>
							<div class="definition-list">
								<dt class="definition-label">OS</dt><dd class="definition-value">{{ machineStack.os }}</dd>
								<dt class="definition-label">Cpu</dt>
								<dd class="definition-value">
									<pre class="stack-code light"><code id="code-view" class="language-json"><p class="stack-code-line">{{ machineStack.cpu }}</code></pre>
								</dd>								<dt class="definition-label">Network</dt>
								<dd class="definition-value">
									<pre class="stack-code light"><code id="code-view" class="language-json"><p class="stack-code-line">{{ machineStack.network }}</code></pre>
								</dd>
							</div>
						</div>
					</div>
					<div v-else-if="selectedTab === 'app-tab'" class="tab-content">
						<div class="layout-col">
							<br>
							<h3 class="definition-list-title">App Information</h3>
							<div class="definition-list">
								<dt class="definition-label">App Version</dt><dd class="definition-value">{{ environmentStack['npm_package_version'] }}</dd>
								<dt class="definition-label">License</dt><dd class="definition-value">{{ environmentStack['npm_package_license'] }}</dd>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

</body>

</html>
