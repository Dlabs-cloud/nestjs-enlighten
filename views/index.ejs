<html class="theme-light">

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta http-equiv="X-UA-Compatible" content="ie=edge">
	<meta name="robots" content="noindex, nofollow">

	<title> <%= response.error %> </title>
	<style type="text/css">
		<%= stylingRaw %>
	</style>
</head>

<script type="module">
	import Vue from 'https://cdn.jsdelivr.net/npm/vue@2.6.11/dist/vue.esm.browser.js'

	new Vue({
		el: '#app',
		data: {
			isSolutionVisible: true,
			isLoading: true,
			errorStack: <%- JSON.stringify(errorStack) %>,
			selectedErrorStack: 0,
		},
		mounted() {
			document.getElementById('overlay').style.visibility = "hidden";
		},
		methods: {
			handleSolutionBarVisibility: function () {
				this.isSolutionVisible ^= true;
			},
			handleFileSelection: function (fileIndex) {
				this.selectedErrorStack = fileIndex;
				setTimeout(() => Prism.highlightAll(), 1);

			}
		},
		watch: {
		},
		computed: {
		},
	})
</script>

<body class="scrollbar-lg">

	<div id="app" v-cloak><svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
			<div id="overlay" class="custom-overlay"> </div>
			<symbol id="arrow-down-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">
				<path
					d="M413.1 222.5l22.2 22.2c9.4 9.4 9.4 24.6 0 33.9L241 473c-9.4 9.4-24.6 9.4-33.9 0L12.7 278.6c-9.4-9.4-9.4-24.6 0-33.9l22.2-22.2c9.5-9.5 25-9.3 34.3.4L184 343.4V56c0-13.3 10.7-24 24-24h32c13.3 0 24 10.7 24 24v287.4l114.8-120.5c9.3-9.8 24.8-10 34.3-.4z">
				</path>
			</symbol>
			<symbol id="arrow-up-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">
				<path
					d="M34.9 289.5l-22.2-22.2c-9.4-9.4-9.4-24.6 0-33.9L207 39c9.4-9.4 24.6-9.4 33.9 0l194.3 194.3c9.4 9.4 9.4 24.6 0 33.9L413 289.4c-9.5 9.5-25 9.3-34.3-.4L264 168.6V456c0 13.3-10.7 24-24 24h-32c-13.3 0-24-10.7-24-24V168.6L69.2 289.1c-9.3 9.8-24.8 10-34.3.4z">
				</path>
			</symbol>
			<symbol id="clipboard-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512">
				<path
					d="M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z">
				</path>
			</symbol>
			<symbol id="lightbulb-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 352 512">
				<path
					d="M176 80c-52.94 0-96 43.06-96 96 0 8.84 7.16 16 16 16s16-7.16 16-16c0-35.3 28.72-64 64-64 8.84 0 16-7.16 16-16s-7.16-16-16-16zM96.06 459.17c0 3.15.93 6.22 2.68 8.84l24.51 36.84c2.97 4.46 7.97 7.14 13.32 7.14h78.85c5.36 0 10.36-2.68 13.32-7.14l24.51-36.84c1.74-2.62 2.67-5.7 2.68-8.84l.05-43.18H96.02l.04 43.18zM176 0C73.72 0 0 82.97 0 176c0 44.37 16.45 84.85 43.56 115.78 16.64 18.99 42.74 58.8 52.42 92.16v.06h48v-.12c-.01-4.77-.72-9.51-2.15-14.07-5.59-17.81-22.82-64.77-62.17-109.67-20.54-23.43-31.52-53.15-31.61-84.14-.2-73.64 59.67-128 127.95-128 70.58 0 128 57.42 128 128 0 30.97-11.24 60.85-31.65 84.14-39.11 44.61-56.42 91.47-62.1 109.46a47.507 47.507 0 0 0-2.22 14.3v.1h48v-.05c9.68-33.37 35.78-73.18 52.42-92.16C335.55 260.85 352 220.37 352 176 352 78.8 273.2 0 176 0z">
				</path>
			</symbol>
			<symbol id="pencil-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
				<path
					d="M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z">
				</path>
			</symbol>
			<symbol id="plus-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
				<path
					d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z">
				</path>
			</symbol>
			<symbol id="share-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
				<path
					d="M503.691 189.836L327.687 37.851C312.281 24.546 288 35.347 288 56.015v80.053C127.371 137.907 0 170.1 0 322.326c0 61.441 39.581 122.309 83.333 154.132 13.653 9.931 33.111-2.533 28.077-18.631C66.066 312.814 132.917 274.316 288 272.085V360c0 20.7 24.3 31.453 39.687 18.164l176.004-152c11.071-9.562 11.086-26.753 0-36.328z">
				</path>
			</symbol>
		</svg>
		<div>
			<div class="layout-col z-10">
				<div class="mt-12 card card-has-header card-no-props">
					<div class="card-header">
						<div class="grid items-center rounded-t border-b border-tint-300 text-xs text-tint-600 "
							style="grid-template-columns: 1fr 1fr;">
							<div class="grid cols-auto justify-start gap-2 px-4 py-2">
								<div class="flex items-center"><a
										href="http://flareapp.io/docs/ignition-for-laravel/introduction" target="_blank"
										title="Ignition docs"><svg viewBox="0 0 428 988" class="w-4 h-5 mr-4">
											<polygon points="428,247.1 428,494.1 214,617.5 214,369.3 "
												style="fill: rgb(250, 78, 121);">
											</polygon>
											<polygon points="0,988 0,741 214,617.5 214,864.1 "
												style="fill: rgb(255, 240, 130);"></polygon>
											<polygon points="214,123.9 214,617.5 0,494.1 0,0 "
												style="fill: rgb(230, 0, 58);"></polygon>
											<polygon points="214,864.1 214,617.5 428,741 428,988 "
												style="fill: rgb(255, 225, 0);">
											</polygon>
										</svg></a> <span class="inline-flex justify-start items-baseline">
										<%= projectPath %> </div>
							</div>
							<div class="grid cols-auto items-center justify-end gap-4 px-4 py-2">
								<!---->
							</div>
						</div>
					</div>
					<div></div>
					<div class="card-details">
						<div class="card-details-overflow scrollbar p-12 pt-10">
							<div class="text-2xl"><span class="ui-exception-class"><span><%= errorObject.error %>
										[<%= response.statusCode %>] </span>
									<!----></span>
								<div class="ui-exception-message">
									<%= response.message %>
								</div>
							</div>
							<div><a href=<%= baseUrl %> target="_blank" class="ui-url">
									<%= baseUrl %>
								</a></div>
						</div>
					</div>
				</div>
			</div>
			<div class="layout-col z-1">
				<div v-if="isSolutionVisible">
					<div v-on:click="handleSolutionBarVisibility" class="solution-toggle"><a target="_blank"
							class="link-solution">Hide solutions</a></div>
					<div class="solution">
						<div class="solution-main">
							<div class="solution-background mx-0"><svg x="0px" y="0px" viewBox="0 0 299 452"
									class="hidden absolute right-0 h-full | md:block">
									<g style="opacity: 0.075;">
										<polygon points="298.1,451.9 150.9,451.9 21,226.9 298.1,227.1"
											style="fill: rgb(63, 63, 63);">
										</polygon>
										<polygon points="298.1,227.1 21,226.9 150.9,1.9 298.1,1.9"
											style="fill: rgb(151, 151, 151);">
										</polygon>
									</g>
								</svg></div>
							<div class="p-12">
								<div class="solution-content ml-0">
									<h2 class="solution-title"> <%= errorObject.info %> </h2>
									<div>
										<%= errorSolution %>
									</div>
									<!---->
									<div class="mt-8 grid justify-start">
										<div class="border-t-2 border-gray-700 opacity-25 "></div>
										<div class="pt-2 grid cols-auto-1fr gapx-4 gapy-2 text-sm"><label
												class="font-semibold uppercase tracking-wider">Read more</label>
											<ul>
												<li><a href="#" target="_blank" class="link-solution">Reference Link</a>
												</li>
											</ul>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
				<div v-else>
					<div v-on:click="handleSolutionBarVisibility" class="solution-toggle solution-toggle-show"><a
							target="_blank" class="link-solution">Show solutions</a></div>
					<div class="solution solution-hidden">
						<div class="solution-main">
							<div class="solution-background mx-0"><svg x="0px" y="0px" viewBox="0 0 299 452"
									class="hidden absolute right-0 h-full | md:block">
									<g style="opacity: 0.075;">
										<polygon points="298.1,451.9 150.9,451.9 21,226.9 298.1,227.1"
											style="fill: rgb(63, 63, 63);">
										</polygon>
										<polygon points="298.1,227.1 21,226.9 150.9,1.9 298.1,1.9"
											style="fill: rgb(151, 151, 151);">
										</polygon>
									</g>
								</svg></div>
							<div class="p-12">
								<div class="solution-content ml-0">
									<h2 class="solution-title">Database name seems incorrect</h2>
									<div>
										<p>You're using the default database name <code>laravel</code>. This database
											does not exist.</p>
										<p>Edit the <code>.env</code> file and use the correct database name in the
											<code>DB_DATABASE</code>
											key.</p>
									</div>
									<!---->
									<div class="mt-8 grid justify-start">
										<div class="border-t-2 border-gray-700 opacity-25 "></div>
										<div class="pt-2 grid cols-auto-1fr gapx-4 gapy-2 text-sm"><label
												class="font-semibold uppercase tracking-wider">Read more</label>
											<ul>
												<li><a href="https://laravel.com/docs/master/database#configuration"
														target="_blank" class="link-solution">Database: Getting Started
														docs</a></li>
											</ul>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="absolute left-0 bottom-0 w-full h-8 mb-2 px-4 text-sm z-10">
					<ul class="grid cols-auto place-center gap-1">
						<li><a class="grid place-center h-8 min-w-8 px-2 rounded-full bg-tint-200 font-semibold">
								1
							</a></li>
					</ul>
				</div>
			</div>
		</div>
		<div class="layout-col mt-12">
			<div class="tabs">
				<nav class="tab-nav">
					<ul class="tab-bar">
						<li><button class="tab tab-active">
								Stack trace
							</button></li>
					</ul>
					<div class="tab-delimiter"></div>
					<ul class="tab-bar">
						<li><button class="tab tab-active">
								Share
							</button></li>
					</ul>
				</nav>
				<div class="tab-main">
					<div class="stack" selected-frame-number="45">
						<div class="stack-nav">
							<div class="stack-nav-actions">
							</div>
							<div class="stack-frames">
								<ol class="stack-frames-scroll scrollbar">

									<% for(const index in errorStack) {%>
									<li>
										<ul class="stack-frame-group stack-frame-group-vendor">
											<!-- stack-frame-selected -->
											<li class="stack-frame | cursor-pointer stack-frame">
												<div class="stack-frame-number"><%= [index] %></div>
												<div v-on:click="handleFileSelection('<%= [index] %>')"
													class="stack-frame-text">
													<header class="stack-frame-header mb-1"><span
															class="inline-flex justify-start items-baseline stack-frame-path"><span
																class="ui-path text-gray-800">
																<%= errorStack[index].fileName %>
															</span>
														</span></header> <span class="stack-frame-exception-class"><span
															class="ui-exception-class stack-frame-exception-class"><span
																class="opacity-75"><%= errorStack[index].functionName %><wbr></span>
															</span></span>
												</div>
												<div class="stack-frame-line"><span class="ui-line-number">
														:<span
															class="font-mono"><%= errorStack[index].lineNumber %></span></span>
												</div>
											</li>
										</ul>
									</li>
									<% } %>

								</ol>
							</div>
						</div>
						<div class="stack-main">
							<div class="stack-main-header">
								<div class="grid cols-auto gap-2 justify-start items-center"><span
										class="ui-exception-class"><span class="opacity-75">Illuminate\<wbr></span><span
												class="opacity-75">View\<wbr></span><span>FileViewFinder<wbr></span><span
														class="opacity-75">::findInPaths</span></span></div> <span
									class="inline-flex justify-start items-baseline mt-1"><span
										class="ui-path"><span>vendor/<wbr></span><span>laravel/<wbr></span><span>framework/<wbr></span><span>src/<wbr></span><span>Illuminate/<wbr></span><span>View/<wbr></span><span
																	class="font-semibold">FileViewFinder</span><span
																	class="">.php</span><span>:137</span></span> <a
																href="phpstorm://open?file=%2FUsers%2Fnimda%2FDevspace%2Fblog%2Fvendor%2Flaravel%2Fframework%2Fsrc%2FIlluminate%2FView%2FFileViewFinder.php&amp;line=137"
																class="ml-2 inline-block text-sm text-purple-400 hover:text-purple-500"><svg
																	class="icon">
																	<use xlink:href="#pencil-icon"></use>
																</svg></a></span>
							</div>
							<div class="stack-main-content">
								<div class="stack-viewer scrollbar">
									<div class="stack-ruler">
										<div class="stack-lines">
											<p class="stack-line cursor-pointer">
												122
											</p>
											<p class="stack-line cursor-pointer">
												123
											</p>
											<p class="stack-line cursor-pointer">
												124
											</p>
											<p class="stack-line cursor-pointer">
												125
											</p>
											<p class="stack-line cursor-pointer">
												126
											</p>
											<p class="stack-line cursor-pointer">
												127
											</p>
											<p class="stack-line cursor-pointer">
												128
											</p>
											<p class="stack-line cursor-pointer">
												129
											</p>
											<p class="stack-line cursor-pointer">
												130
											</p>
											<p class="stack-line cursor-pointer">
												131
											</p>
											<p class="stack-line cursor-pointer">
												132
											</p>
											<p class="stack-line cursor-pointer">
												133
											</p>
											<p class="stack-line cursor-pointer">
												134
											</p>
											<p class="stack-line cursor-pointer">
												135
											</p>
											<p class="stack-line cursor-pointer">
												136
											</p>
											<p class="stack-line cursor-pointer stack-line-highlight">
												137
											</p>
											<p class="stack-line cursor-pointer">
												138
											</p>
											<p class="stack-line cursor-pointer">
												139
											</p>
											<p class="stack-line cursor-pointer">
												140
											</p>
											<p class="stack-line cursor-pointer">
												141
											</p>
											<p class="stack-line cursor-pointer">
												142
											</p>
											<p class="stack-line cursor-pointer">
												143
											</p>
											<p class="stack-line cursor-pointer">
												144
											</p>
											<p class="stack-line cursor-pointer">
												145
											</p>
											<p class="stack-line cursor-pointer">
												146
											</p>
											<p class="stack-line cursor-pointer">
												147
											</p>
											<p class="stack-line cursor-pointer">
												148
											</p>
											<p class="stack-line cursor-pointer">
												149
											</p>
											<p class="stack-line cursor-pointer">
												150
											</p>
											<p class="stack-line cursor-pointer">
												151
											</p>
											<p class="stack-line cursor-pointer">
												152
											</p>
										</div>
									</div>
									<pre class="stack-code light"><code id="code-view" class="language-js"><p class="stack-code-line" v-for="(stack, index) in errorStack[selectedErrorStack].codeRaw" :key="index+selectedErrorStack">{{ stack }}</code></pre>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>


</body>

<script>
	var _self = "undefined" != typeof window ? window : "undefined" != typeof WorkerGlobalScope && self instanceof WorkerGlobalScope ? self : {}, Prism = function () { var e = /\blang(?:uage)?-(\w+)\b/i, t = 0, n = _self.Prism = { util: { encode: function (e) { return e instanceof a ? new a(e.type, n.util.encode(e.content), e.alias) : "Array" === n.util.type(e) ? e.map(n.util.encode) : e.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/\u00a0/g, " ") }, type: function (e) { return Object.prototype.toString.call(e).match(/\[object (\w+)\]/)[1] }, objId: function (e) { return e.__id || Object.defineProperty(e, "__id", { value: ++t }), e.__id }, clone: function (e) { var t = n.util.type(e); switch (t) { case "Object": var a = {}; for (var r in e) e.hasOwnProperty(r) && (a[r] = n.util.clone(e[r])); return a; case "Array": return e.map && e.map(function (e) { return n.util.clone(e) }) }return e } }, languages: { extend: function (e, t) { var a = n.util.clone(n.languages[e]); for (var r in t) a[r] = t[r]; return a }, insertBefore: function (e, t, a, r) { r = r || n.languages; var l = r[e]; if (2 == arguments.length) { a = arguments[1]; for (var i in a) a.hasOwnProperty(i) && (l[i] = a[i]); return l } var o = {}; for (var s in l) if (l.hasOwnProperty(s)) { if (s == t) for (var i in a) a.hasOwnProperty(i) && (o[i] = a[i]); o[s] = l[s] } return n.languages.DFS(n.languages, function (t, n) { n === r[e] && t != e && (this[t] = o) }), r[e] = o }, DFS: function (e, t, a, r) { r = r || {}; for (var l in e) e.hasOwnProperty(l) && (t.call(e, l, e[l], a || l), "Object" !== n.util.type(e[l]) || r[n.util.objId(e[l])] ? "Array" !== n.util.type(e[l]) || r[n.util.objId(e[l])] || (r[n.util.objId(e[l])] = !0, n.languages.DFS(e[l], t, l, r)) : (r[n.util.objId(e[l])] = !0, n.languages.DFS(e[l], t, null, r))) } }, plugins: {}, highlightAll: function (e, t) { var a = { callback: t, selector: 'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code' }; n.hooks.run("before-highlightall", a); for (var r, l = a.elements || document.querySelectorAll(a.selector), i = 0; r = l[i++];)n.highlightElement(r, e === !0, a.callback) }, highlightElement: function (t, a, r) { for (var l, i, o = t; o && !e.test(o.className);)o = o.parentNode; o && (l = (o.className.match(e) || [, ""])[1], i = n.languages[l]), t.className = t.className.replace(e, "").replace(/\s+/g, " ") + " language-" + l, o = t.parentNode, /pre/i.test(o.nodeName) && (o.className = o.className.replace(e, "").replace(/\s+/g, " ") + " language-" + l); var s = t.textContent, u = { element: t, language: l, grammar: i, code: s }; if (!s || !i) return n.hooks.run("complete", u), void 0; if (n.hooks.run("before-highlight", u), a && _self.Worker) { var c = new Worker(n.filename); c.onmessage = function (e) { u.highlightedCode = e.data, n.hooks.run("before-insert", u), u.element.innerHTML = u.highlightedCode, r && r.call(u.element), n.hooks.run("after-highlight", u), n.hooks.run("complete", u) }, c.postMessage(JSON.stringify({ language: u.language, code: u.code, immediateClose: !0 })) } else u.highlightedCode = n.highlight(u.code, u.grammar, u.language), n.hooks.run("before-insert", u), u.element.innerHTML = u.highlightedCode, r && r.call(t), n.hooks.run("after-highlight", u), n.hooks.run("complete", u) }, highlight: function (e, t, r) { var l = n.tokenize(e, t); return a.stringify(n.util.encode(l), r) }, tokenize: function (e, t) { var a = n.Token, r = [e], l = t.rest; if (l) { for (var i in l) t[i] = l[i]; delete t.rest } e: for (var i in t) if (t.hasOwnProperty(i) && t[i]) { var o = t[i]; o = "Array" === n.util.type(o) ? o : [o]; for (var s = 0; s < o.length; ++s) { var u = o[s], c = u.inside, g = !!u.lookbehind, h = !!u.greedy, f = 0, d = u.alias; u = u.pattern || u; for (var p = 0; p < r.length; p++) { var m = r[p]; if (r.length > e.length) break e; if (!(m instanceof a)) { u.lastIndex = 0; var y = u.exec(m), v = 1; if (!y && h && p != r.length - 1) { var b = r[p + 1].matchedStr || r[p + 1], k = m + b; if (p < r.length - 2 && (k += r[p + 2].matchedStr || r[p + 2]), u.lastIndex = 0, y = u.exec(k), !y) continue; var w = y.index + (g ? y[1].length : 0); if (w >= m.length) continue; var _ = y.index + y[0].length, P = m.length + b.length; if (v = 3, P >= _) { if (r[p + 1].greedy) continue; v = 2, k = k.slice(0, P) } m = k } if (y) { g && (f = y[1].length); var w = y.index + f, y = y[0].slice(f), _ = w + y.length, S = m.slice(0, w), O = m.slice(_), j = [p, v]; S && j.push(S); var A = new a(i, c ? n.tokenize(y, c) : y, d, y, h); j.push(A), O && j.push(O), Array.prototype.splice.apply(r, j) } } } } } return r }, hooks: { all: {}, add: function (e, t) { var a = n.hooks.all; a[e] = a[e] || [], a[e].push(t) }, run: function (e, t) { var a = n.hooks.all[e]; if (a && a.length) for (var r, l = 0; r = a[l++];)r(t) } } }, a = n.Token = function (e, t, n, a, r) { this.type = e, this.content = t, this.alias = n, this.matchedStr = a || null, this.greedy = !!r }; if (a.stringify = function (e, t, r) { if ("string" == typeof e) return e; if ("Array" === n.util.type(e)) return e.map(function (n) { return a.stringify(n, t, e) }).join(""); var l = { type: e.type, content: a.stringify(e.content, t, r), tag: "span", classes: ["token", e.type], attributes: {}, language: t, parent: r }; if ("comment" == l.type && (l.attributes.spellcheck = "true"), e.alias) { var i = "Array" === n.util.type(e.alias) ? e.alias : [e.alias]; Array.prototype.push.apply(l.classes, i) } n.hooks.run("wrap", l); var o = ""; for (var s in l.attributes) o += (o ? " " : "") + s + '="' + (l.attributes[s] || "") + '"'; return "<" + l.tag + ' class="' + l.classes.join(" ") + '" ' + o + ">" + l.content + "</" + l.tag + ">" }, !_self.document) return _self.addEventListener ? (_self.addEventListener("message", function (e) { var t = JSON.parse(e.data), a = t.language, r = t.code, l = t.immediateClose; _self.postMessage(n.highlight(r, n.languages[a], a)), l && _self.close() }, !1), _self.Prism) : _self.Prism; var r = document.currentScript || [].slice.call(document.getElementsByTagName("script")).pop(); return r && (n.filename = r.src, document.addEventListener && !r.hasAttribute("data-manual") && document.addEventListener("DOMContentLoaded", n.highlightAll)), _self.Prism }(); "undefined" != typeof module && module.exports && (module.exports = Prism), "undefined" != typeof global && (global.Prism = Prism);
	Prism.languages.markup = { comment: /<!--[\w\W]*?-->/, prolog: /<\?[\w\W]+?\?>/, doctype: /<!DOCTYPE[\w\W]+?>/, cdata: /<!\[CDATA\[[\w\W]*?]]>/i, tag: { pattern: /<\/?(?!\d)[^\s>\/=.$<]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\\1|\\?(?!\1)[\w\W])*\1|[^\s'">=]+))?)*\s*\/?>/i, inside: { tag: { pattern: /^<\/?[^\s>\/]+/i, inside: { punctuation: /^<\/?/, namespace: /^[^\s>\/:]+:/ } }, "attr-value": { pattern: /=(?:('|")[\w\W]*?(\1)|[^\s>]+)/i, inside: { punctuation: /[=>"']/ } }, punctuation: /\/?>/, "attr-name": { pattern: /[^\s>\/]+/, inside: { namespace: /^[^\s>\/:]+:/ } } } }, entity: /&#?[\da-z]{1,8};/i }, Prism.hooks.add("wrap", function (a) { "entity" === a.type && (a.attributes.title = a.content.replace(/&amp;/, "&")) }), Prism.languages.xml = Prism.languages.markup, Prism.languages.html = Prism.languages.markup, Prism.languages.mathml = Prism.languages.markup, Prism.languages.svg = Prism.languages.markup;
	Prism.languages.css = { comment: /\/\*[\w\W]*?\*\//, atrule: { pattern: /@[\w-]+?.*?(;|(?=\s*\{))/i, inside: { rule: /@[\w-]+/ } }, url: /url\((?:(["'])(\\(?:\r\n|[\w\W])|(?!\1)[^\\\r\n])*\1|.*?)\)/i, selector: /[^\{\}\s][^\{\};]*?(?=\s*\{)/, string: /("|')(\\(?:\r\n|[\w\W])|(?!\1)[^\\\r\n])*\1/, property: /(\b|\B)[\w-]+(?=\s*:)/i, important: /\B!important\b/i, "function": /[-a-z0-9]+(?=\()/i, punctuation: /[(){};:]/ }, Prism.languages.css.atrule.inside.rest = Prism.util.clone(Prism.languages.css), Prism.languages.markup && (Prism.languages.insertBefore("markup", "tag", { style: { pattern: /(<style[\w\W]*?>)[\w\W]*?(?=<\/style>)/i, lookbehind: !0, inside: Prism.languages.css, alias: "language-css" } }), Prism.languages.insertBefore("inside", "attr-value", { "style-attr": { pattern: /\s*style=("|').*?\1/i, inside: { "attr-name": { pattern: /^\s*style/i, inside: Prism.languages.markup.tag.inside }, punctuation: /^\s*=\s*['"]|['"]\s*$/, "attr-value": { pattern: /.+/i, inside: Prism.languages.css } }, alias: "language-css" } }, Prism.languages.markup.tag));
	Prism.languages.clike = { comment: [{ pattern: /(^|[^\\])\/\*[\w\W]*?\*\//, lookbehind: !0 }, { pattern: /(^|[^\\:])\/\/.*/, lookbehind: !0 }], string: { pattern: /(["'])(\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, greedy: !0 }, "class-name": { pattern: /((?:\b(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[a-z0-9_\.\\]+/i, lookbehind: !0, inside: { punctuation: /(\.|\\)/ } }, keyword: /\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/, "boolean": /\b(true|false)\b/, "function": /[a-z0-9_]+(?=\()/i, number: /\b-?(?:0x[\da-f]+|\d*\.?\d+(?:e[+-]?\d+)?)\b/i, operator: /--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*|\/|~|\^|%/, punctuation: /[{}[\];(),.:]/ };
	Prism.languages.javascript = Prism.languages.extend("clike", { keyword: /\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\b/, number: /\b-?(0x[\dA-Fa-f]+|0b[01]+|0o[0-7]+|\d*\.?\d+([Ee][+-]?\d+)?|NaN|Infinity)\b/, "function": /[_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*(?=\()/i }), Prism.languages.insertBefore("javascript", "keyword", { regex: { pattern: /(^|[^\/])\/(?!\/)(\[.+?]|\\.|[^\/\\\r\n])+\/[gimyu]{0,5}(?=\s*($|[\r\n,.;})]))/, lookbehind: !0, greedy: !0 } }), Prism.languages.insertBefore("javascript", "class-name", { "template-string": { pattern: /`(?:\\\\|\\?[^\\])*?`/, greedy: !0, inside: { interpolation: { pattern: /\$\{[^}]+\}/, inside: { "interpolation-punctuation": { pattern: /^\$\{|\}$/, alias: "punctuation" }, rest: Prism.languages.javascript } }, string: /[\s\S]+/ } } }), Prism.languages.markup && Prism.languages.insertBefore("markup", "tag", { script: { pattern: /(<script[\w\W]*?>)[\w\W]*?(?=<\/script>)/i, lookbehind: !0, inside: Prism.languages.javascript, alias: "language-javascript" } }), Prism.languages.js = Prism.languages.javascript;
	Prism.languages.git = { comment: /^#.*/m, deleted: /^[-–].*/m, inserted: /^\+.*/m, string: /("|')(\\?.)*?\1/m, command: { pattern: /^.*\$ git .*$/m, inside: { parameter: /\s(--|-)\w+/m } }, coord: /^@@.*@@$/m, commit_sha1: /^commit \w{40}$/m };
	!function (e) { e.languages.jade = { comment: { pattern: /(^([\t ]*))\/\/.*((?:\r?\n|\r)\2[\t ]+.+)*/m, lookbehind: !0 }, "multiline-script": { pattern: /(^([\t ]*)script\b.*\.[\t ]*)((?:\r?\n|\r(?!\n))(?:\2[\t ]+.+|\s*?(?=\r?\n|\r)))+/m, lookbehind: !0, inside: { rest: e.languages.javascript } }, filter: { pattern: /(^([\t ]*)):.+((?:\r?\n|\r(?!\n))(?:\2[\t ]+.+|\s*?(?=\r?\n|\r)))+/m, lookbehind: !0, inside: { "filter-name": { pattern: /^:[\w-]+/, alias: "variable" } } }, "multiline-plain-text": { pattern: /(^([\t ]*)[\w\-#.]+\.[\t ]*)((?:\r?\n|\r(?!\n))(?:\2[\t ]+.+|\s*?(?=\r?\n|\r)))+/m, lookbehind: !0 }, markup: { pattern: /(^[\t ]*)<.+/m, lookbehind: !0, inside: { rest: e.languages.markup } }, doctype: { pattern: /((?:^|\n)[\t ]*)doctype(?: .+)?/, lookbehind: !0 }, "flow-control": { pattern: /(^[\t ]*)(?:if|unless|else|case|when|default|each|while)\b(?: .+)?/m, lookbehind: !0, inside: { each: { pattern: /^each .+? in\b/, inside: { keyword: /\b(?:each|in)\b/, punctuation: /,/ } }, branch: { pattern: /^(?:if|unless|else|case|when|default|while)\b/, alias: "keyword" }, rest: e.languages.javascript } }, keyword: { pattern: /(^[\t ]*)(?:block|extends|include|append|prepend)\b.+/m, lookbehind: !0 }, mixin: [{ pattern: /(^[\t ]*)mixin .+/m, lookbehind: !0, inside: { keyword: /^mixin/, "function": /\w+(?=\s*\(|\s*$)/, punctuation: /[(),.]/ } }, { pattern: /(^[\t ]*)\+.+/m, lookbehind: !0, inside: { name: { pattern: /^\+\w+/, alias: "function" }, rest: e.languages.javascript } }], script: { pattern: /(^[\t ]*script(?:(?:&[^(]+)?\([^)]+\))*[\t ]+).+/m, lookbehind: !0, inside: { rest: e.languages.javascript } }, "plain-text": { pattern: /(^[\t ]*(?!-)[\w\-#.]*[\w\-](?:(?:&[^(]+)?\([^)]+\))*\/?[\t ]+).+/m, lookbehind: !0 }, tag: { pattern: /(^[\t ]*)(?!-)[\w\-#.]*[\w\-](?:(?:&[^(]+)?\([^)]+\))*\/?:?/m, lookbehind: !0, inside: { attributes: [{ pattern: /&[^(]+\([^)]+\)/, inside: { rest: e.languages.javascript } }, { pattern: /\([^)]+\)/, inside: { "attr-value": { pattern: /(=\s*)(?:\{[^}]*\}|[^,)\r\n]+)/, lookbehind: !0, inside: { rest: e.languages.javascript } }, "attr-name": /[\w-]+(?=\s*!?=|\s*[,)])/, punctuation: /[!=(),]+/ } }], punctuation: /:/ } }, code: [{ pattern: /(^[\t ]*(?:-|!?=)).+/m, lookbehind: !0, inside: { rest: e.languages.javascript } }], punctuation: /[.\-!=|]+/ }; for (var t = "(^([\\t ]*)):{{filter_name}}((?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+", n = [{ filter: "atpl", language: "twig" }, { filter: "coffee", language: "coffeescript" }, "ejs", "handlebars", "hogan", "less", "livescript", "markdown", "mustache", "plates", { filter: "sass", language: "scss" }, "stylus", "swig"], a = {}, i = 0, r = n.length; r > i; i++) { var s = n[i]; s = "string" == typeof s ? { filter: s, language: s } : s, e.languages[s.language] && (a["filter-" + s.filter] = { pattern: RegExp(t.replace("{{filter_name}}", s.filter), "m"), lookbehind: !0, inside: { "filter-name": { pattern: /^:[\w-]+/, alias: "variable" }, rest: e.languages[s.language] } }) } e.languages.insertBefore("jade", "filter", a) }(Prism);
	Prism.languages.json = { property: /".*?"(?=\s*:)/gi, string: /"(?!:)(\\?[^"])*?"(?!:)/g, number: /\b-?(0x[\dA-Fa-f]+|\d*\.?\d+([Ee]-?\d+)?)\b/g, punctuation: /[{}[\]);,]/g, operator: /:/g, "boolean": /\b(true|false)\b/gi, "null": /\bnull\b/gi }, Prism.languages.jsonp = Prism.languages.json;
	Prism.languages.php = Prism.languages.extend("clike", { keyword: /\b(and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\b/i, constant: /\b[A-Z0-9_]{2,}\b/, comment: { pattern: /(^|[^\\])(?:\/\*[\w\W]*?\*\/|\/\/.*)/, lookbehind: !0 } }), Prism.languages.insertBefore("php", "class-name", { "shell-comment": { pattern: /(^|[^\\])#.*/, lookbehind: !0, alias: "comment" } }), Prism.languages.insertBefore("php", "keyword", { delimiter: /\?>|<\?(?:php)?/i, variable: /\$\w+\b/i, "package": { pattern: /(\\|namespace\s+|use\s+)[\w\\]+/, lookbehind: !0, inside: { punctuation: /\\/ } } }), Prism.languages.insertBefore("php", "operator", { property: { pattern: /(->)[\w]+/, lookbehind: !0 } }), Prism.languages.markup && (Prism.hooks.add("before-highlight", function (e) { "php" === e.language && (e.tokenStack = [], e.backupCode = e.code, e.code = e.code.replace(/(?:<\?php|<\?)[\w\W]*?(?:\?>)/gi, function (a) { return e.tokenStack.push(a), "{{{PHP" + e.tokenStack.length + "}}}" })) }), Prism.hooks.add("before-insert", function (e) { "php" === e.language && (e.code = e.backupCode, delete e.backupCode) }), Prism.hooks.add("after-highlight", function (e) { if ("php" === e.language) { for (var a, n = 0; a = e.tokenStack[n]; n++)e.highlightedCode = e.highlightedCode.replace("{{{PHP" + (n + 1) + "}}}", Prism.highlight(a, e.grammar, "php").replace(/\$/g, "$$$$")); e.element.innerHTML = e.highlightedCode } }), Prism.hooks.add("wrap", function (e) { "php" === e.language && "markup" === e.type && (e.content = e.content.replace(/(\{\{\{PHP[0-9]+\}\}\})/g, '<span class="token php">$1</span>')) }), Prism.languages.insertBefore("php", "comment", { markup: { pattern: /<[^?]\/?(.*?)>/, inside: Prism.languages.markup }, php: /\{\{\{PHP[0-9]+\}\}\}/ }));
	!function (e) { e.languages.sass = e.languages.extend("css", { comment: { pattern: /^([ \t]*)\/[\/*].*(?:(?:\r?\n|\r)\1[ \t]+.+)*/m, lookbehind: !0 } }), e.languages.insertBefore("sass", "atrule", { "atrule-line": { pattern: /^(?:[ \t]*)[@+=].+/m, inside: { atrule: /(?:@[\w-]+|[+=])/m } } }), delete e.languages.sass.atrule; var a = /((\$[-_\w]+)|(#\{\$[-_\w]+\}))/i, t = [/[+*\/%]|[=!]=|<=?|>=?|\b(?:and|or|not)\b/, { pattern: /(\s+)-(?=\s)/, lookbehind: !0 }]; e.languages.insertBefore("sass", "property", { "variable-line": { pattern: /^[ \t]*\$.+/m, inside: { punctuation: /:/, variable: a, operator: t } }, "property-line": { pattern: /^[ \t]*(?:[^:\s]+ *:.*|:[^:\s]+.*)/m, inside: { property: [/[^:\s]+(?=\s*:)/, { pattern: /(:)[^:\s]+/, lookbehind: !0 }], punctuation: /:/, variable: a, operator: t, important: e.languages.sass.important } } }), delete e.languages.sass.property, delete e.languages.sass.important, delete e.languages.sass.selector, e.languages.insertBefore("sass", "punctuation", { selector: { pattern: /([ \t]*)\S(?:,?[^,\r\n]+)*(?:,(?:\r?\n|\r)\1[ \t]+\S(?:,?[^,\r\n]+)*)*/, lookbehind: !0 } }) }(Prism);
	Prism.languages.twig = { comment: /\{#[\s\S]*?#\}/, tag: { pattern: /\{\{[\s\S]*?\}\}|\{%[\s\S]*?%\}/, inside: { ld: { pattern: /^(?:\{\{\-?|\{%\-?\s*\w+)/, inside: { punctuation: /^(?:\{\{|\{%)\-?/, keyword: /\w+/ } }, rd: { pattern: /\-?(?:%\}|\}\})$/, inside: { punctuation: /.*/ } }, string: { pattern: /("|')(?:\\?.)*?\1/, inside: { punctuation: /^['"]|['"]$/ } }, keyword: /\b(?:even|if|odd)\b/, "boolean": /\b(?:true|false|null)\b/, number: /\b-?(?:0x[\dA-Fa-f]+|\d*\.?\d+([Ee][-+]?\d+)?)\b/, operator: [{ pattern: /(\s)(?:and|b\-and|b\-xor|b\-or|ends with|in|is|matches|not|or|same as|starts with)(?=\s)/, lookbehind: !0 }, /[=<>]=?|!=|\*\*?|\/\/?|\?:?|[-+~%|]/], property: /\b[a-zA-Z_][a-zA-Z0-9_]*\b/, punctuation: /[()\[\]{}:.,]/ } }, other: { pattern: /\S(?:[\s\S]*\S)?/, inside: Prism.languages.markup } };
</script>

</html>
